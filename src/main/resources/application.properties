# Added for Spring Otel logging
spring.application.name=Training project - Cloud Kitchen

# spring.datasource.url=jdbc:yugabytedb://us-west-2.520e4823-46b4-4cf1-955c-89f2b0768627.aws.ybdb.io:5433/yugabyte?load-balance=false
# spring.datasource.username=admin
# spring.datasource.driver-class-name=com.yugabyte.Driver
# spring.datasource.hikari.minimum-idle=2
# spring.datasource.hikari.maximum-pool-size=20
# spring.datasource.hikari.auto-commit=false

# #Jasypt encrypted password
#spring.datasource.password=ENC(4OU4k663dv22RnHhB2aRNGNzDNbQ+4N7)
#spring.datasource.password=Trial2022

#Jasypt Password Encryptor Configurations
jasypt.encryptor.poolSize=4
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}
jasypt.encryptor.bean=jasyptEncryptor
jasypt.encryptor.algorithm=PBEWithMD5AndDES


spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.HSQLDialect
spring.datasource.url=jdbc:hsqldb:mem:testdb;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create


# Springboot actuator configurations
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=
management.endpoint.health.show-details=always
# Resiliency related 
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Build related
management.info.env.enabled=true
management.info.build.enabled=true
management.info.git.enabled=true
management.info.git.mode=full
management.info.java.enabled=true
management.info.os.enabled=true

#spring.mvc.pathmatch.matching-strategy=
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

springdoc.packagesToScan=arp.training.cloudkitchen
springdoc.pathsToMatch=/menu/v1/*
springdoc.api-docs.enabled=true
springdoc.swagger-ui.supportedSubmitMethods="get", "put", "post", "delete", "options", "head", "patch", "trace"

# Hibernate issue fix : https://stackoverflow.com/questions/28862483/spring-and-jackson-how-to-disable-fail-on-empty-beans-through-responsebody
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

## Log hibernate SQL queries 
logging.level.org.hibernate.SQL=DEBUG
## Log parameters
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.type=TRACE
#logging.level.org.hibernate.stat=DEBUG



# Circuit Breaker Default
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize= 10
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled= true
resilience4j.circuitbreaker.configs.default.failureRateThreshold= 50
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls= 1
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState= 1
resilience4j.circuitbreaker.configs.default.slidingWindowSize= 10
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState= 15s
resilience4j.circuitbreaker.configs.default.slidingWindowType= COUNT_BASED

resilience4j.circuitbreaker.instances.my-circuit-breaker-1.baseConfig= default
resilience4j.circuitbreaker.instances.my-circuit-breaker-2.baseConfig= default

# Ratelimiter config 
resilience4j.ratelimiter.metrics.enabled=true

#Ratelimiter default config 
resilience4j.ratelimiter.configs.default.register-health-indicator=true
resilience4j.ratelimiter.configs.default.limit-for-period=2
resilience4j.ratelimiter.configs.default.limit-refresh-period=60s
resilience4j.ratelimiter.configs.default.timeout-duration=10s
resilience4j.ratelimiter.configs.default.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.configs.default.subscribe-for-events=true
resilience4j.ratelimiter.configs.default.event-consumer-buffer-size=50

# Ratelimiter for GET Proucts
resilience4j.ratelimiter.instances.getProducts.register-health-indicator=true
resilience4j.ratelimiter.instances.getProducts.limit-for-period=5
resilience4j.ratelimiter.instances.getProducts.limit-refresh-period=60s
resilience4j.ratelimiter.instances.getProducts.timeout-duration=10s
resilience4j.ratelimiter.instances.getProducts.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.getProducts.subscribe-for-events=true
resilience4j.ratelimiter.instances.getProducts.event-consumer-buffer-size=50

# Ratelimiter for POST Proucts
resilience4j.ratelimiter.instances.postProducts.register-health-indicator=true
resilience4j.ratelimiter.instances.postProducts.limit-for-period=5
resilience4j.ratelimiter.instances.postProducts.limit-refresh-period=60s
resilience4j.ratelimiter.instances.postProducts.timeout-duration=10s
resilience4j.ratelimiter.instances.postProducts.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.postProducts.subscribe-for-events=true
resilience4j.ratelimiter.instances.postProducts.event-consumer-buffer-size=50

# Ratelimiter for GET Categories
resilience4j.ratelimiter.instances.getCategories.register-health-indicator=true
resilience4j.ratelimiter.instances.getCategories.limit-for-period=5
resilience4j.ratelimiter.instances.getCategories.limit-refresh-period=60s
resilience4j.ratelimiter.instances.getCategories.timeout-duration=10s
resilience4j.ratelimiter.instances.getCategories.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.getCategories.subscribe-for-events=true
resilience4j.ratelimiter.instances.getCategories.event-consumer-buffer-size=50

# Ratelimiter for POST Categories
resilience4j.ratelimiter.instances.postCategories.register-health-indicator=true
resilience4j.ratelimiter.instances.postCategories.limit-for-period=5
resilience4j.ratelimiter.instances.postCategories.limit-refresh-period=60s
resilience4j.ratelimiter.instances.postCategories.timeout-duration=10s
resilience4j.ratelimiter.instances.postCategories.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.postCategories.subscribe-for-events=true
resilience4j.ratelimiter.instances.postCategories.event-consumer-buffer-size=50

# Logging pattern containing traceId and spanId; no longer provided through Sleuth by default
logging.pattern.level="%5p [%X{traceId:-},%X{spanId:-}]"
